{"ast":null,"code":"var _jsxFileName = \"/Users/allynickell/Desktop/tomo-take-home-fe-engineer/src/frontend/home/index.js\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [spices, setSpices] = useState([]);\n  const [blends, setBlends] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filteredSpices, setFilteredSpices] = useState([]); // I wanted to make it so the handleChange did the filter rather than the submit. I like it when apps show different data as \n  // I type instead of once I hit submit. This makes things a little easier to find in my mind, \n  // especially when I can't remember the exact name\n\n  function handleChange(e) {\n    setSearch(e.target.value);\n    setFilteredSpices(spices.filter(item => item.name.toLowerCase().includes(search.toLowerCase())));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  } // load spices when the page loads\n\n\n  useEffect(() => {\n    axios.get('/api/v1/spices').then(response => {\n      setSpices(response.data);\n    });\n    axios.get('/api/v1/blends').then(response => {\n      setBlends(response.data);\n    });\n  }, []); //Below, I added the form for search bar and submit button. Technically, we don't really need the submit button, but I wanted \n  //it to match the Mock design exactly\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Spice List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      onSubmit: e => {\n        handleSubmit(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        name: \"search\",\n        value: search,\n        placeholder: \"Type spice here...\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spice-container\",\n      children: search ? filteredSpices.map(spice => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spice-box\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/spices/${spice.id}`,\n          children: spice.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, spice.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this)) : spices.map(spice => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spice-box\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/spices/${spice.id}`,\n          children: spice.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, spice.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Blend List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blend-container\",\n      children: blends.map(blend => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blend-box\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/blends/${blend.id}`,\n          children: blend.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, blend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"wSyHgi4fPK+foDbhwB33GK6h6LA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/allynickell/Desktop/tomo-take-home-fe-engineer/src/frontend/home/index.js"],"names":["useEffect","useState","Link","axios","Home","spices","setSpices","blends","setBlends","search","setSearch","filteredSpices","setFilteredSpices","handleChange","e","target","value","filter","item","name","toLowerCase","includes","handleSubmit","preventDefault","get","then","response","data","map","spice","id","blend"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD,CAJc,CAMd;AACA;AACA;;AAEA,WAASY,YAAT,CAAsBC,CAAtB,EAAyB;AACvBJ,IAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAJ,IAAAA,iBAAiB,CACfP,MAAM,CAACY,MAAP,CAAeC,IAAD,IACZA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCZ,MAAM,CAACW,WAAP,EAAjC,CADF,CADe,CAAjB;AAKD;;AAED,WAASE,YAAT,CAAsBR,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACS,cAAF;AACD,GArBa,CAuBd;;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACqB,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkCC,QAAD,IAAc;AAC7CpB,MAAAA,SAAS,CAACoB,QAAQ,CAACC,IAAV,CAAT;AACD,KAFD;AAGAxB,IAAAA,KAAK,CAACqB,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkCC,QAAD,IAAc;AAC7ClB,MAAAA,SAAS,CAACkB,QAAQ,CAACC,IAAV,CAAT;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT,CAxBc,CAiCd;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,QAAQ,EAAGb,CAAD,IAAO;AACfQ,QAAAA,YAAY,CAACR,CAAD,CAAZ;AACD,OAJH;AAAA,8BAME;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,KAAK,EAAEL,MAJT;AAKE,QAAA,WAAW,EAAC,oBALd;AAME,QAAA,QAAQ,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA,cANF,eAcE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,EAAE,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAoBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGJ,MAAM,GACHE,cAAc,CAACiB,GAAf,CAAoBC,KAAD,iBACjB;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA9B;AAAA,oBAAkCD,KAAK,CAACV;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,SAAgCU,KAAK,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA,cADF,CADG,GAMHzB,MAAM,CAACuB,GAAP,CAAYC,KAAD,iBACT;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA9B;AAAA,oBAAkCD,KAAK,CAACV;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,SAAgCU,KAAK,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA,cADF;AAPN;AAAA;AAAA;AAAA;AAAA,YApBF,eAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCF,eAkCE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGvB,MAAM,CAACqB,GAAP,CAAYG,KAAD,iBACV;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACD,EAAG,EAA9B;AAAA,oBAAkCC,KAAK,CAACZ;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,SAAgCY,KAAK,CAACD,EAAtC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GA/EQ1B,I;;KAAAA,I;AAiFT,eAAeA,IAAf","sourcesContent":["import './index.css';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Home() {\n  const [spices, setSpices] = useState([]);\n  const [blends, setBlends] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filteredSpices, setFilteredSpices] = useState([]);\n\n  // I wanted to make it so the handleChange did the filter rather than the submit. I like it when apps show different data as \n  // I type instead of once I hit submit. This makes things a little easier to find in my mind, \n  // especially when I can't remember the exact name\n\n  function handleChange(e) {\n    setSearch(e.target.value);\n    setFilteredSpices(\n      spices.filter((item) =>\n        item.name.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  // load spices when the page loads\n  useEffect(() => {\n    axios.get('/api/v1/spices').then((response) => {\n      setSpices(response.data);\n    });\n    axios.get('/api/v1/blends').then((response) => {\n      setBlends(response.data);\n    });\n  }, []);\n\n  //Below, I added the form for search bar and submit button. Technically, we don't really need the submit button, but I wanted \n  //it to match the Mock design exactly\n  return (\n    <div className=\"App\">\n      <h4>Spice List</h4>\n      <form\n        className=\"search-form\"\n        onSubmit={(e) => {\n          handleSubmit(e);\n        }}\n      >\n        <input\n          type=\"text\"\n          id=\"search\"\n          name=\"search\"\n          value={search}\n          placeholder=\"Type spice here...\"\n          onChange={handleChange}\n        ></input>\n        <button type=\"submit\" id=\"search-btn\">\n          Search\n        </button>\n      </form>\n      <div className=\"spice-container\">\n        {search\n          ? filteredSpices.map((spice) => (\n              <div className=\"spice-box\" key={spice.id}>\n                <Link to={`/spices/${spice.id}`}>{spice.name}</Link>\n              </div>\n            ))\n          : spices.map((spice) => (\n              <div className=\"spice-box\" key={spice.id}>\n                <Link to={`/spices/${spice.id}`}>{spice.name}</Link>\n              </div>\n            ))}\n      </div>\n      <h4>Blend List</h4>\n      <div className=\"blend-container\">\n        {blends.map((blend) => (\n          <div className=\"blend-box\" key={blend.id}>\n            <Link to={`/blends/${blend.id}`}>{blend.name}</Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}