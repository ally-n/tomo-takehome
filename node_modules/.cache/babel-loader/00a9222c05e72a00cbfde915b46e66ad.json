{"ast":null,"code":"var _jsxFileName = \"/Users/allynickell/Desktop/tomo-take-home-fe-engineer/src/frontend/blend-detail/index.js\",\n    _s = $RefreshSig$();\n\n// get blend API is at /api/v1/blends/:id\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlendDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [blend, setBlend] = useState(null);\n  const [name, setName] = useState('');\n  useEffect(async () => {\n    console.log(\"useEffect running on blends\");\n    const {\n      data\n    } = await axios.get(`/api/v1/blends/${id}`);\n    setBlend(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blend Detail Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), blend && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Blend Name: \", blend.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Spices in Blend: \", blend.spices.map(item => {\n          item.BlendDetail;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlendDetail, \"S3JUb512KZhOKMFkF07vrad9daI=\", false, function () {\n  return [useParams];\n});\n\n_c = BlendDetail;\nexport default BlendDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlendDetail\");","map":{"version":3,"sources":["/Users/allynickell/Desktop/tomo-take-home-fe-engineer/src/frontend/blend-detail/index.js"],"names":["axios","useEffect","useState","useParams","BlendDetail","id","blend","setBlend","name","setName","console","log","data","get","spices","map","item"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpBS,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CAAW,kBAAiBR,EAAG,EAA/B,CAAvB;AACEE,IAAAA,QAAQ,CAACK,IAAD,CAAR;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,KAAK,iBACJ;AAAA,8BACE;AAAA,mCAAkBA,KAAK,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,wCAAuBF,KAAK,CAACQ,MAAN,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AAChDA,UAAAA,IAAI,CAACZ,WAAL;AACD,SAFsB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1BD;;GAAMA,W;UACWD,S;;;KADXC,W;AA4BN,eAAeA,WAAf","sourcesContent":["// get blend API is at /api/v1/blends/:id\nimport axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst BlendDetail = () => {\n  const { id } = useParams();\n  const [blend, setBlend] = useState(null);\n  const [name, setName] = useState('')\n  \n  useEffect(async () => {\n    console.log(\"useEffect running on blends\")\n    const { data } = await axios.get(`/api/v1/blends/${id}`);\n      setBlend(data);\n  }, []);\n \n  return (\n    <div>\n      <h2>Blend Detail Page</h2>\n      {blend && (\n        <div>\n          <div>Blend Name: {blend.name}</div>\n          <div>Spices in Blend: {blend.spices.map((item) => {\n            item.BlendDetail\n          })}</div>\n          {/* <div>Spice Cost: {spice.price}</div>\n          <div>Spice Heat Level: {spice.heat}</div> */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlendDetail;\n"]},"metadata":{},"sourceType":"module"}