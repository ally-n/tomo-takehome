{"ast":null,"code":"var _jsxFileName = \"/Users/allynickell/Desktop/tomo-take-home-fe-engineer/src/frontend/spice-detail/index.js\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SpiceDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [spice, setSpice] = useState(null);\n  const [name, setName] = useState('');\n  const [heat, setHeat] = useState(1); // const [recipes, setRecipes] = useState([]); <--Bonus feature that isn't working, but I wanted to explain\n  //I wanted to use the Tasty API that would take the name of the spice and search for it in recipes. The request works\n  //in Postman, but I couldn't figure out how to make it work with Mirage. Explain more below\n\n  useEffect(async () => {\n    const {\n      data\n    } = await axios.get(`/api/v1/spices/${id}`);\n    setSpice(data);\n    setName(data.name);\n    setHeat(data.heat); // getRecipe(name) <-- commented out for recipe feature\n  }, []); //Bonus Feature: Pepper emoji for how hot a spice is on a scale from 1-5\n\n  let pepperEmoji = () => {\n    switch (heat) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"sheep\",\n          children: \"\\uD83C\\uDF36\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"sheep\",\n          children: \"\\uD83C\\uDF36\\uD83C\\uDF36\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"sheep\",\n          children: \"\\uD83C\\uDF36\\uD83C\\uDF36\\uD83C\\uDF36\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"sheep\",\n          children: \"\\uD83C\\uDF36\\uD83C\\uDF36\\uD83C\\uDF36\\uD83C\\uDF36\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"sheep\",\n          children: \"\\uD83C\\uDF36\\uD83C\\uDF36\\uD83C\\uDF36\\uD83C\\uDF36\\uD83C\\uDF36\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return 'Insert spice joke here';\n    }\n  }; //Bonus Feature Idea: recipes that contain the spice you clicked on\n  //Tried via Mirage this.passthrough in backend, but didn't work so commented out\n  //   const getRecipe = (name) => {\n  //     axios.get('https://tasty.p.rapidapi.com/recipes/list', {\n  //       headers: {\n  //         'x-rapidapi-host': 'tasty.p.rapidapi.com',\n  //         'x-rapidapi-key': 'b90d91600cmsh13851f98a95db90p194c21jsne2c401f19db7',\n  //       },\n  //    params: {\n  //        from: '0',\n  //        size: '20',\n  //        tags: name\n  //        }\n  //    })\n  //    .then(res => {\n  //        setRecipes(res.data)\n  //    })\n  //    .catch(err => console.log(err))\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spice Detail Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), spice && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Spice Name: \", spice.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Spice Color: \", spice.color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Spice Cost: \", spice.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Spice Heat Level: \", pepperEmoji(heat)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SpiceDetail, \"BqjsRKixzQcOqD3mFr6DTKcUQz8=\", false, function () {\n  return [useParams];\n});\n\n_c = SpiceDetail;\nexport default SpiceDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpiceDetail\");","map":{"version":3,"sources":["/Users/allynickell/Desktop/tomo-take-home-fe-engineer/src/frontend/spice-detail/index.js"],"names":["axios","useEffect","useState","useParams","SpiceDetail","id","spice","setSpice","name","setName","heat","setHeat","data","get","pepperEmoji","color","price"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC,CAJwB,CAKxB;AAEA;AACA;;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CAAW,kBAAiBR,EAAG,EAA/B,CAAvB;AACAE,IAAAA,QAAQ,CAACK,IAAD,CAAR;AACAH,IAAAA,OAAO,CAACG,IAAI,CAACJ,IAAN,CAAP;AACAG,IAAAA,OAAO,CAACC,IAAI,CAACF,IAAN,CAAP,CAJoB,CAKpB;AACD,GANQ,EAMN,EANM,CAAT,CAVwB,CAkBxB;;AACA,MAAII,WAAW,GAAG,MAAM;AACtB,YAAQJ,IAAR;AACE,WAAK,CAAL;AACE,4BACE;AAAM,UAAA,IAAI,EAAC,KAAX;AAAiB,wBAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;;AAKF,WAAK,CAAL;AACE,4BACE;AAAM,UAAA,IAAI,EAAC,KAAX;AAAiB,wBAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;;AAKF,WAAK,CAAL;AACE,4BACE;AAAM,UAAA,IAAI,EAAC,KAAX;AAAiB,wBAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;;AAKF,WAAK,CAAL;AACE,4BACE;AAAM,UAAA,IAAI,EAAC,KAAX;AAAiB,wBAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;;AAKF,WAAK,CAAL;AACE,4BACE;AAAM,UAAA,IAAI,EAAC,KAAX;AAAiB,wBAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;;AAKF;AACE,eAAO,wBAAP;AAhCJ;AAkCD,GAnCD,CAnBwB,CAwDxB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,KAAK,iBACJ;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,mCAAkBA,KAAK,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,oCAAmBF,KAAK,CAACS,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,mCAAkBT,KAAK,CAACU,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,yCAAwBF,WAAW,CAACJ,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA5FD;;GAAMN,W;UACWD,S;;;KADXC,W;AA8FN,eAAeA,WAAf","sourcesContent":["import './index.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst SpiceDetail = () => {\n  const { id } = useParams();\n  const [spice, setSpice] = useState(null);\n  const [name, setName] = useState('');\n  const [heat, setHeat] = useState(1);\n  // const [recipes, setRecipes] = useState([]); <--Bonus feature that isn't working, but I wanted to explain\n\n  //I wanted to use the Tasty API that would take the name of the spice and search for it in recipes. The request works\n  //in Postman, but I couldn't figure out how to make it work with Mirage. Explain more below\n\n  useEffect(async () => {\n    const { data } = await axios.get(`/api/v1/spices/${id}`);\n    setSpice(data);\n    setName(data.name);\n    setHeat(data.heat);\n    // getRecipe(name) <-- commented out for recipe feature\n  }, []);\n\n  //Bonus Feature: Pepper emoji for how hot a spice is on a scale from 1-5\n  let pepperEmoji = () => {\n    switch (heat) {\n      case 1:\n        return (\n          <span role=\"img\" aria-label=\"sheep\">\n            ğŸŒ¶\n          </span>\n        );\n      case 2:\n        return (\n          <span role=\"img\" aria-label=\"sheep\">\n            ğŸŒ¶ğŸŒ¶\n          </span>\n        );\n      case 3:\n        return (\n          <span role=\"img\" aria-label=\"sheep\">\n            ğŸŒ¶ğŸŒ¶ğŸŒ¶\n          </span>\n        );\n      case 4:\n        return (\n          <span role=\"img\" aria-label=\"sheep\">\n            ğŸŒ¶ğŸŒ¶ğŸŒ¶ğŸŒ¶\n          </span>\n        );\n      case 5:\n        return (\n          <span role=\"img\" aria-label=\"sheep\">\n            ğŸŒ¶ğŸŒ¶ğŸŒ¶ğŸŒ¶ğŸŒ¶\n          </span>\n        );\n      default:\n        return 'Insert spice joke here';\n    }\n  };\n\n  //Bonus Feature Idea: recipes that contain the spice you clicked on\n  //Tried via Mirage this.passthrough in backend, but didn't work so commented out\n\n  //   const getRecipe = (name) => {\n  //     axios.get('https://tasty.p.rapidapi.com/recipes/list', {\n  //       headers: {\n  //         'x-rapidapi-host': 'tasty.p.rapidapi.com',\n  //         'x-rapidapi-key': 'b90d91600cmsh13851f98a95db90p194c21jsne2c401f19db7',\n  //       },\n  //    params: {\n  //        from: '0',\n  //        size: '20',\n  //        tags: name\n  //        }\n  //    })\n  //    .then(res => {\n  //        setRecipes(res.data)\n  //    })\n  //    .catch(err => console.log(err))\n  // }\n\n  return (\n    <div>\n      <h2>Spice Detail Page</h2>\n      {spice && (\n        <div className=\"detail-container\">\n          <div>Spice Name: {spice.name}</div>\n          <div>Spice Color: {spice.color}</div>\n          <div>Spice Cost: {spice.price}</div>\n          <div>Spice Heat Level: {pepperEmoji(heat)}</div>\n        </div>\n      )}\n      {/* <h2>Recipes with {name} in it</h2> <-- This would have been where I mapped through recipes \n      arr for 20 recipes that include that spice with the Tasty API */}\n    </div>\n  );\n};\n\nexport default SpiceDetail;\n"]},"metadata":{},"sourceType":"module"}